[{"/home/zunayed/Desktop/react-todo/todo/src/index.js":"1","/home/zunayed/Desktop/react-todo/todo/src/App.js":"2","/home/zunayed/Desktop/react-todo/todo/src/reportWebVitals.js":"3","/home/zunayed/Desktop/react-todo/todo/src/components/Form.js":"4","/home/zunayed/Desktop/react-todo/todo/src/components/TodoList.js":"5","/home/zunayed/Desktop/react-todo/todo/src/components/Todo.js":"6"},{"size":500,"mtime":1609486975636,"results":"7","hashOfConfig":"8"},{"size":597,"mtime":1609499642476,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609486975738,"results":"10","hashOfConfig":"8"},{"size":1140,"mtime":1609497189180,"results":"11","hashOfConfig":"8"},{"size":366,"mtime":1609564636717,"results":"12","hashOfConfig":"8"},{"size":498,"mtime":1609564777327,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2brs5a",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/zunayed/Desktop/react-todo/todo/src/index.js",[],"/home/zunayed/Desktop/react-todo/todo/src/App.js",[],"/home/zunayed/Desktop/react-todo/todo/src/reportWebVitals.js",[],"/home/zunayed/Desktop/react-todo/todo/src/components/Form.js",["28"],"import React from 'react';\nimport App from '../App';\n\nconst Form = ({ setInputText, todos, setTodos, inputText }) => {\n\n    //Here javascript code and function can be written\n\n    const inputTextHandler = (e) => {\n        console.log(e.target.value);\n        setInputText(e.target.value);\n        \n    };\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        setTodos([\n            ...todos, {text: inputText, completed:false, id: Math.random() * 1000}\n        ]);\n\n        setInputText('')\n        \n    };\n    return (\n        <form>\n        <input value={inputText} onChange = {inputTextHandler} type=\"text\" className=\"todo-input\" />\n        <button onClick= {submitTodoHandler} className=\"todo-button\" type=\"submit\">\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <div className=\"select\">\n          <select name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n          </select>\n        </div>\n      </form>\n    );\n};\n\nexport default Form;",["29","30"],"/home/zunayed/Desktop/react-todo/todo/src/components/TodoList.js",[],"/home/zunayed/Desktop/react-todo/todo/src/components/Todo.js",["31"],{"ruleId":"32","severity":1,"message":"33","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":11},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"32","severity":1,"message":"40","line":5,"column":11,"nodeType":"34","messageId":"35","endLine":5,"endColumn":24},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"'deleteHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]